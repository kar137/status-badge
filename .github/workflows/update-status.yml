name: Update Status Badge

on:
  schedule:
    - cron: "*/15 * * * *"  # Every 15 minutes
  workflow_dispatch:

jobs:
  update-status:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check GitHub activity and update status
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e  # Stop if any command fails

          USER="kar137"
          echo "üîç Fetching latest public GitHub event for $USER..."

          LAST_EVENT=$(curl -s https://api.github.com/users/$USER/events/public | jq '.[0].created_at' | tr -d '"')

          if [ -z "$LAST_EVENT" ]; then
            echo "‚ùå Failed to fetch event or user has no public activity."
            exit 0
          fi

          LAST=$(date -d "$LAST_EVENT" +%s)
          NOW=$(date +%s)
          DIFF=$(( (NOW - LAST) / 60 ))

          if [ "$DIFF" -lt 120 ]; then
            MSG="Coding"
            COLOR="blue"
          else
            MSG="Offline"
            COLOR="lightgrey"
          fi

          echo "üïí Last activity: $LAST_EVENT"
          echo "‚è±Ô∏è  Difference: $DIFF minutes"
          echo "üì¶ Updating status to: $MSG"

          echo "{
            \"schemaVersion\": 1,
            \"label\": \"Now\",
            \"message\": \"$MSG\",
            \"color\": \"$COLOR\"
          }" > new_status.json

          if [ ! -f status.json ]; then
            echo "‚ö†Ô∏è status.json does not exist. Creating new file."
            mv new_status.json status.json
            COMMIT_NEEDED=true
          elif ! cmp -s new_status.json status.json; then
            echo "‚úÖ Detected change in status.json"
            mv new_status.json status.json
            COMMIT_NEEDED=true
          else
            echo "‚ÑπÔ∏è No changes to status.json. Skipping commit."
            COMMIT_NEEDED=false
          fi

          if [ "$COMMIT_NEEDED" = true ]; then
            git config --global user.name "kar137"
            git config --global user.email "kar137@users.noreply.github.com"
            git add status.json
            git commit -m "Update status to $MSG"
            git push https://kar137:${GH_PAT}@github.com/kar137/status-badge.git HEAD:main
            echo "üöÄ Commit and push completed."
          fi
