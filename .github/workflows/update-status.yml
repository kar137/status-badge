name: Update Status Badge

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  update-status:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest commit
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          # Method 1: Check all repositories' commits
          LAST_COMMIT=$(curl -s -H "Authorization: token $GH_PAT" \
            "https://api.github.com/search/commits?q=author:kar137&sort=author-date&order=desc&per_page=1" \
            | jq -r '.items[0].commit.author.date // empty')
          
          # Fallback to events API if empty
          if [ -z "$LAST_COMMIT" ]; then
            LAST_COMMIT=$(curl -s -H "Authorization: token $GH_PAT" \
              "https://api.github.com/users/kar137/events?per_page=10" \
              | jq -r 'map(select(.type == "PushEvent"))[0].created_at // empty')
          fi

          echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_ENV

      - name: Update status
        run: |
          if [ -z "$LAST_COMMIT" ]; then
            echo "❌ No activity found"
            MSG="Offline"
            COLOR="lightgrey"
          else
            DIFF_MIN=$(( ($(date +%s) - $(date -d "$LAST_COMMIT" +%s)) / 60 ))
            
            if [ "$DIFF_MIN" -lt 120 ]; then
              MSG="Coding 🚀"
              COLOR="blue"
            elif [ "$DIFF_MIN" -lt 200 ]; then
              MSG="Away"
              COLOR="yellow"
            else
              MSG="Offline"
              COLOR="lightgrey"
            fi
            echo "Last activity: $LAST_COMMIT ($DIFF_MIN mins ago)"
          fi

          echo "{
            \"schemaVersion\": 1,
            \"label\": \"Status\",
            \"message\": \"$MSG\",
            \"color\": \"$COLOR\",
            \"cacheSeconds\": 60
          }" > status.json

      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add status.json
          
          if ! git diff --cached --quiet; then
            git commit -m "Update status: $MSG [skip ci]"
            git push "https://kar137:${{ secrets.GH_PAT }}@github.com/kar137/status-badge.git" HEAD:main
            echo "✅ Status updated"
          else
            echo "🔄 No changes"
          fi